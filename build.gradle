buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.diffplug.spotless:spotless-plugin-gradle:6.3.0'
  }
}
plugins {
  id 'application'
  id 'io.franzbecker.gradle-lombok' version '5.0.0'
  id 'java'
  id 'nu.studer.jooq' version '4.1'
  id 'org.flywaydb.flyway' version '7.15.0'
}

apply plugin: 'com.diffplug.spotless'

wrapper {
  gradleVersion = '7.3'
}

lombok {
  version '1.18.20'
  sha256 = 'ce947be6c2fbe759fbbe8ef3b42b6825f814c98c8853f1013f2d9630cedf74b0'
}

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  implementation(
    'com.fasterxml.jackson.core:jackson-databind:[2.13.2.1,3)',
    'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:[2.13.2,3)',
    'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:[2.13.2,3)',
    'com.google.guava:guava:[24.1.1,31)',
    'com.yubico:webauthn-server-core:[2.0.0,3)',
    'javax.ws.rs:javax.ws.rs-api:[2.1,3)',
    'org.apache.commons:commons-dbcp2:[2.8,3)',
    'org.eclipse.jetty:jetty-server:[9.4.9.v20180320,10)',
    'org.eclipse.jetty:jetty-servlet:[9.4.9.v20180320,10)',
    'org.glassfish.jersey.containers:jersey-container-servlet-core:[2.33,3)',
    'org.glassfish.jersey.inject:jersey-hk2:[2.33,3)',
    'org.jooq:jooq:[3.13.6,3.14)',
    'org.mindrot:jbcrypt:[0.4,0.5)',
    'org.slf4j:slf4j-api:[1.7.25,2)',
  )

  runtimeOnly(
    'ch.qos.logback:logback-classic:[1.2.3,2)',
    'org.glassfish.jersey.containers:jersey-container-servlet:[2.33,3)',
    'org.mariadb.jdbc:mariadb-java-client:[2.7.5,3)',
  )

  modules {
    module('javax.servlet:servlet-api') {
      replacedBy('javax.servlet:javax.servlet-api')
    }
  }

  jooqRuntime(
    'org.mariadb.jdbc:mariadb-java-client:[2.7.5,3)',
  )
}

flyway {
  url = "jdbc:mysql://localhost:3306/webauthn_demo?allowPublicKeyRetrieval=true"
  user = 'webauthn_demo'
  password = '1234'
  locations = ['classpath:/db/migration']
}

jooq {
  version = '3.13.6'
  edition = 'OSS'
  generateSchemaSourceOnCompilation = false
  webauthn_demo(sourceSets.main) {
    jdbc {
      driver = 'org.mariadb.jdbc.Driver'
      url = 'jdbc:mysql://localhost:3306/webauthn_demo?allowPublicKeyRetrieval=true'
      user = 'webauthn_demo'
      password = '1234'
    }
    generator {
      database {
        inputSchema = 'webauthn_demo'
        name = 'org.jooq.meta.mysql.MySQLDatabase'
        excludes = 'flyway_.*'
      }
    }
    generator {
      target {
        packageName = 'demo.webauthn'
        directory = 'src/main/jooq'
      }
    }
  }
}

tasks.withType(nu.studer.gradle.jooq.JooqTask) { jooqTask ->
  tasks.flywayMigrate.finalizedBy jooqTask
  jooqTask.outputs.upToDateWhen { !tasks.flywayMigrate.didWork }
}

sourceSets {
  main {
    java {
      srcDir 'src/main/jooq'
    }
  }
}

spotless {
  java {
    googleJavaFormat()
    targetExclude 'src/main/jooq/**'
  }
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

task installFrontend(type: Exec) {
  workingDir 'frontend'
  commandLine 'npm', 'install'

  inputs.file 'frontend/package.json'
  inputs.file 'frontend/package-lock.json'
  outputs.dir 'frontend/node_modules'
}

task buildFrontend(type: Exec) {
  dependsOn installFrontend

  workingDir 'frontend'
  commandLine 'npm', 'run', 'build'

  inputs.dir 'frontend/node_modules'
  inputs.dir 'frontend/src'
  inputs.file 'frontend/.babelrc'
  inputs.file 'frontend/.browserslistrc'
  inputs.file 'frontend/jsconfig.json'
  inputs.file 'frontend/webpack.config.js'
  outputs.dir 'frontend/build/dist'
}

flywayMigrate {
  dependsOn processResources
}

run {
  dependsOn buildFrontend
  dependsOn flywayMigrate
}


mainClassName = 'demo.webauthn.EmbeddedServer'
